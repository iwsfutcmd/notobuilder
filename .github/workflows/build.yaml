name: Build font and specimen

on: workflow_call
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - run: sudo apt-get install ttfautohint
    - uses: actions/cache@v2
      with:
        path: ./subset-files
        key: subsets
    - name: Install dependencies
      run: make venv
    - name: Do first-run script if necessary
      run: make .init.stamp
      if: github.repository != 'notofonts/noto-project-template'
    - uses: stefanzweifel/git-auto-commit-action@v4
      name: First-run setup
      if: github.repository != 'notofonts/noto-project-template'
      with:
        file_pattern: .init.stamp README.md requirements.txt OFL.txt
        commit_message: "Personalize for this repo"
    - name: Build font
      run: make build
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fontbuild
        path: fonts

  fontbakery-notofonts:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download font build zip
      uses: actions/download-artifact@v3
      with:
        name: fontbuild
        path: fonts
    - name: Test
      run: find .
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Make directories
      run: mkdir -p out/fontbakery out/badges
      continue-on-error: true
    - name: Install fontbakery
      run: pip3 install fontbakery
    - name: Check with fontbakery
      run: |
        for family_path in fonts/*; do
          family=`basename $family_path`
          fontbakery check-notofonts -j --configuration fontbakery.yml -l WARN --succinct --badges out/badges --html out/fontbakery/notofonts-$family-report.html --ghmarkdown out/fontbakery/notofonts-$family-report.md $family_path/hinted/*ttf/*ttf
        done
      continue-on-error: true
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fontbakery-notofonts
        path: out


  fontbakery-googlefonts:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download font build zip
      uses: actions/download-artifact@v3
      with:
        name: fontbuild
        path: fonts
    - name: Test
      run: find .
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Make directories
      run: mkdir -p out/fontbakery out/badges
      continue-on-error: true
    - name: Install fontbakery
      run: pip3 install fontbakery
    - name: Check with fontbakery
      run: |
        for family_path in fonts/*; do
          family=`basename $family_path`
          fontbakery check-googlefonts -j --configuration fontbakery.yml -l WARN --succinct --badges out/badges --html out/fontbakery/googlefonts-$family-report.html --ghmarkdown out/fontbakery/notofonts-$family-report.md $family_path/full/*ttf/*ttf
        done
      continue-on-error: true
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fontbakery-googlefonts
        path: out

  proof:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download font build zip
      uses: actions/download-artifact@v3
      with:
        name: fontbuild
        path: fonts
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: make venv
    - name: Make proof
      run: |
        . venv/bin/activate; mkdir -p out/ out/proof; gftools gen-html proof $(find fonts/*/unhinted/ttf -type f) -o out/proof
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: proof
        path: out

  regression:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Download font build zip
      uses: actions/download-artifact@v3
      with:
        name: fontbuild
        path: fonts
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: make venv
    - name: Regression test
      run: . venv/bin/activate; python3 -m notoqa.regression
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: regression
        path: out

  report:
    runs-on: ubuntu-latest
    needs:
      - fontbakery-notofonts
      - fontbakery-googlefonts
      - proof
      - regression
    steps:
    - uses: actions/checkout@v2
    - name: Download font zip
      uses: actions/download-artifact@v3
      with:
        name: fontbuild
        path: fonts
    - name: Download fontbakery-notofonts zip
      uses: actions/download-artifact@v3
      with:
        name: fontbakery-notofonts
        path: out
    - name: Download fontbakery-googlefonts zip
      uses: actions/download-artifact@v3
      with:
        name: fontbakery-googlefonts
        path: out
    - name: Download proof zip
      uses: actions/download-artifact@v3
      with:
        name: proof
        path: out
    - name: Download regression test zip
      uses: actions/download-artifact@v3
      with:
        name: regression
        path: out
      continue-on-error: true
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: make venv
    - name: Rebuild website
      run: . venv/bin/activate; python3 scripts/template.py
    - name: Copy fonts to gh-pages dir
      run: cp -r fonts out
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
    - name: gen zip file name
      id: zip-name
      shell: bash
      # Set the archive name to repo name + "-assets" e.g "MavenPro-assets"
      run: echo "ZIP_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')-fonts" >> $GITHUB_ENV
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ZIP_NAME }}
        path: out
